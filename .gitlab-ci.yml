---
image: "ruby:3.2"

services:
  - mysql:8.0

variables:
  RAILS_ENV: test
  MYSQL_DATABASE: thape_pp_test
  MYSQL_HOST: mysql
  MYSQL_ALLOW_EMPTY_PASSWORD: "true"
  CACHE_FALLBACK_KEY: "$CI_COMMIT_REF_SLUG"
  PNPM_STORE_DIR: "$CI_PROJECT_DIR/.pnpm-store"

before_script:
  # Setup Node.js
  - curl -fsSL https://deb.nodesource.com/setup_20.x -o nodesource_setup.sh
  - bash nodesource_setup.sh
  - apt-get install -y nodejs

  # Enable pnpm
  - npm config set registry https://registry.npmmirror.com/ --global
  - corepack enable pnpm
  - corepack prepare pnpm@10.19.0 --activate
  - pnpm config set registry https://registry.npmmirror.com/

  # Verify installations
  - node -v
  - pnpm -v
  - ruby -v
  - which ruby

  # Setup Bundler
  - gem install bundler --no-document
  - bundle config set path 'vendor'  # Install dependencies into ./vendor/ruby
  - bundle install --jobs $(nproc)

  # Install JavaScript dependencies
  - pnpm install --frozen-lockfile

stages:
  - test
  - deploy

test:
  stage: test
  services:
    - mysql:8.0
  variables:
    MYSQL_DATABASE: thape_pp_test
    MYSQL_HOST: mysql
    MYSQL_ALLOW_EMPTY_PASSWORD: "true"
  cache:
    - key:
        files:
          - Gemfile.lock
      paths:
        - vendor/ruby
    - key:
        files:
          - pnpm-lock.yaml
      paths:
        - .pnpm-store/
  script:
    - bin/rails db:drop RAILS_ENV=test
    - bin/rails db:setup RAILS_ENV=test
    - bundle exec standardrb
    - bin/rails test
    - bin/rails test:system
  only:
    - main
    - merge_requests

deploy_staging:
  stage: deploy
  cache:
    - key:
        files:
          - Gemfile.lock
      paths:
        - vendor/ruby
  script:
    - bundle install -j $(nproc)
    - mkdir ~/.ssh
    - mv "$SSH_ID_RSA" ~/.ssh/id_rsa
    - mv "$SSH_CONFIG_FILE" ~/.ssh/config
    - bundle exec cap staging deploy
  environment:
    name: staging
    url: https://starter.redwoodjs.cn
  only:
    - main
